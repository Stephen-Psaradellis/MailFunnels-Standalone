<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\ORMException;

/**
 * FunnelUserLinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FunnelUserLinkRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param User $user
     * @return mixed
     */
    public function getFunnelsForUser(User $user)
    {
        $query = $this->createQueryBuilder('funnelUserLink')
            ->where('funnelUserLink.user = :user')
            ->andWhere('funnelUserLink.archived = 0')
            ->setParameter('user', $user)
            ->orderBy('funnelUserLink.dateCreated', 'DESC')
            ->getQuery();

        return $query->getResult();

    }

    /**
     * @param User $user
     * @param $hook
     *
     * @return mixed
     */
    public function findFunnelByUserAndHookType(User $user, $hook)
    {
        try {
            $currentID = $this->createQueryBuilder('funnelUserLink')
                ->select('funnelUserLink.funnel.id')
                ->where('funnelUserLink.user = :user')
                ->andWhere('funnelUserLink.archived = 0')
                ->andWhere('funnelUserLink.funnel.hook = :hook')
                ->setParameter('user', $user)
                ->setParameter('hook', $hook)
                ->getQuery()
                ->getSingleScalarResult();

            if (!$currentID)
                return false;
            return $this->_em->getReference('AppBundle\Entity\Funnel', $currentID);

        } catch (NoResultException $e) {
            return false;
        } catch (NonUniqueResultException $e) {
            return false;
        } catch (ORMException $e) {
            return false;
        }


    }
}
