MailFunnels Technical Overview 

Platform Architecture 

MailFunnelsʼs mission is to provide a year-round assistant for our customerʼs e- commerce businesses. An assistant that is devoted to improving retention and sales within your business. We pay close attention to detail in the services we provide to ensure they are available at all times assisting our customers. 

Our platform was designed to maximize scalability and provide a reliable, secure, and ubiquitous access for all its users. MailFunnels was built using the Symfony PHP framework. Symfony has built a long lasting reputation as a stable, high performance, and professional framework and has been used to power large- scale applications such as Spotify, BBC, and even the Swiss governmentʼs database. Its modular components allow MailFunnels to not only provide its services but also easily expand on those services in the future. Further explanation on how MailFunnels utilizes Symfonyʼs components can be found below. 
  ○ Backend  
  The backend is composed of a collection of PHP classes acting as controllers, entities, services, etc. which are organized     into bundles in order to make it easy to manage and learn for future developers. The backend serves as the “engine” and is     responsible for executing the operations users make on the platform. Since the backend is the only way to execute operations   and modify data, making sure that access to this component is secured is essential. MailFunnels follows all industry           standard security protocols and is protected with multiple layers of security. There is no direct access to this component.   In order to access this component, all requests are sent over to API routes which act as a bridge between this layer.         MailFunnels uses OAuth2 tokens in order to allow users to access these API routes. These tokens can only be acquired through   a successful login and are unique for every user. When the user logs out or has been inactive, the token is deleted and access is denied. This ensures that only the operations that the user has permission to execute are allowed and prevents others from accessing data that does not belong to them. 
    The design of this backend allows for MailFunnels to further expand it services, for example a series of multi-tenant mobile applications, without any compromises to security or capabilities. 
  ○ Front-End
    The frontend serves as the “body” for MailFunnels and is created using variants of the core HTML, JavaScript, and CSS languages. In order to streamline the process of creating the UI/UX, Twig is used in order to render PHP syntax sent back from the backend. Bootstrap is also used for the UI to quickly make the frontend mobile responsive. The front end allows users to perform actions, which send requests to the API. This allows the UI components to be rearranged or reused throughout the website or a mobile application without any changes to the backend. 
  ○ Database The database serves as the “fuel tank” which stores all the data that is used throughout the platform. The backend is the only component that can access the database to prevent any unauthorized access/ modification of private data. MailFunnels uses a MySQL database and is assisted using Doctrine as an Object Relational Mapper (ORM) and Database Abstraction Layer (DBAL). This is used to translate the database into PHP objects that the backend can read. This translation creates a map of the database which makes it easy to create advanced queries and also helps decrease the risk of critical errors or data loss. As MailFunnels scales, the database will grow exponentially and make simple operations more demanding. Using Doctrine, MailFunnels is capable of caching large queries which significantly decreases this demand, increasing speed and cutting server costs. 

Servers/Hosting 

MailFunnels is hosted using the industry-leading Amazon AWS servers. AWS offers a trusted, secure, and high-performance environment to host MailFunnelsʼs platform. It provides the most complete package with full customizability on its services. In addition, AWS gives MailFunnels the best scalability as it is the literal backbone of the multi-billion dollar Amazon.com and has the largest global footprint. However with Enterprise-grade capabilities, managing AWS servers is more complex than other alternatives and require an experienced system administrator to take advantage of its full capabilities. If managed correctly, AWS is also cost-effective. Unlike other hosting services, the high customizability of AWS servers allows for MailFunnels to launch services as needed, cutting away costs for unused resources. There are no long-term contracts or up-front commitments and you pay only for the compute power, storage, and bandwidth used that month. This makes it perfect for hosting cloud- based applications like MailFunnels. 

Today, personal devices are becoming faster, more powerful, and are more than 
capable of performing any basic tasks thrown at them. By taking advantage of this, combined with the module-based architecture of MailFunnels, we can lower server costs even further by splitting up the work load between the backend and the users device. By eliminating the need for the backend to render every component in the front-end its primary focus is shifted towards handling data only, resulting in dramatic decrease of server costs. These operations are far more predictable and allows for more accurate predictions in server costs in proportion to number of users. 
